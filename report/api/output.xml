<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.4 on darwin)" generated="20211226 13:43:29.152" rpa="false" schemaversion="2">
<suite id="s1" name="Api" source="/Users/markchang/mark/crypto_test/api">
<suite id="s1-s1" name="Test" source="/Users/markchang/mark/crypto_test/api/test">
<suite id="s1-s1-s1" name="Test Day Forecast" source="/Users/markchang/mark/crypto_test/api/test/test_day_forecast.robot">
<test id="s1-s1-s1-t1" name="/locspc/android_data/fnd_e.xml - Get - should be response 200 ok and expected data">
<kw name="Get Nine Day Forecast" library="keyword_day_forecast.DayForecast">
<var>${resp}</var>
<msg timestamp="20211226 13:43:29.493" level="INFO">https://pda.weather.gov.hk/locspc/android_data/fnd_e.xml
{'bulletin_datetime': '202112261130', 'general_situation': 'An intense winter monsoon will continue to affect the coast of Guangdong in the next couple of days. The weather will be cold over the region. An upper-air disturbance will also bring cloudy weather and some rain to the region tomorrow. With the upper-air disturbance departing, the weather will improve over the coast of southern China on Tuesday. Under the persistent influence of the dry monsoon, it will remain cool in the morning and at night over the coast of Guangdong in the middle and latter parts of this week. The temperature difference between day and night will be relatively large.', 'forecast_detail': [{'forecast_date': '20211227', 'forecast_day_of_week': 1, 'wind_info': 'North force 5, occasionally force 6 offshore and on high ground at first.', 'wx_desc': 'Cold. Cloudy with occasional rain. Rain will ease off later.', 'max_temp': 12, 'min_temp': 9, 'max_rh': 95, 'min_rh': 80, 'wx_icon': '93', 'psr': 'Medium', 'psr_id': 2}, {'forecast_date': '20211228', 'forecast_day_of_week': 2, 'wind_info': 'North to northeast force 4 to 5.', 'wx_desc': 'Cold in the morning. Dry with bright periods during the day.', 'max_temp': 16, 'min_temp': 11, 'max_rh': 85, 'min_rh': 60, 'wx_icon': '93', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20211229', 'forecast_day_of_week': 3, 'wind_info': 'Northeast force 4.', 'wx_desc': 'Cool with cloudy periods in the morning and at night. Mainly fine and dry during the day.', 'max_temp': 19, 'min_temp': 14, 'max_rh': 75, 'min_rh': 55, 'wx_icon': '51', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20211230', 'forecast_day_of_week': 4, 'wind_info': 'North to northeast force 4.', 'wx_desc': 'Fine and dry. Cool in the morning and at night.', 'max_temp': 20, 'min_temp': 15, 'max_rh': 75, 'min_rh': 55, 'wx_icon': '50', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20211231', 'forecast_day_of_week': 5, 'wind_info': 'North to northeast force 4, occasionally force 5 offshore.', 'wx_desc': 'Fine and dry. Cool in the morning and at night.', 'max_temp': 19, 'min_temp': 14, 'max_rh': 75, 'min_rh': 55, 'wx_icon': '50', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20220101', 'forecast_day_of_week': 6, 'wind_info': 'Northeast force 4, occasionally force 5 offshore.', 'wx_desc': 'Fine and dry. Cool in the morning and at night.', 'max_temp': 19, 'min_temp': 14, 'max_rh': 75, 'min_rh': 55, 'wx_icon': '50', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20220102', 'forecast_day_of_week': 0, 'wind_info': 'East to northeast force 4.', 'wx_desc': 'Dry with sunny periods. Cool in the morning and at night.', 'max_temp': 19, 'min_temp': 15, 'max_rh': 80, 'min_rh': 60, 'wx_icon': '51', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20220103', 'forecast_day_of_week': 1, 'wind_info': 'East force 4 to 5.', 'wx_desc': 'Sunny intervals. Cool in the morning.', 'max_temp': 20, 'min_temp': 16, 'max_rh': 80, 'min_rh': 60, 'wx_icon': '52', 'psr': 'Low', 'psr_id': 0}, {'forecast_date': '20220104', 'forecast_day_of_week': 2, 'wind_info': 'East force 4.', 'wx_desc': 'Sunny intervals. One or two rain patches. Cool in the morning.', 'max_temp': 20, 'min_temp': 17, 'max_rh': 90, 'min_rh': 70, 'wx_icon': '54', 'psr': 'Low', 'psr_id': 0}]}</msg>
<msg timestamp="20211226 13:43:29.494" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.233" endtime="20211226 13:43:29.494"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.494" endtime="20211226 13:43:29.496"/>
</kw>
<kw name="Verify Json Schema" library="common">
<arg>${SCHEMA_FOLDER}</arg>
<arg>schema_day_forecast</arg>
<arg>9_day_forecast</arg>
<arg>${resp.json()}</arg>
<status status="PASS" starttime="20211226 13:43:29.497" endtime="20211226 13:43:29.508"/>
</kw>
<kw name="Verify The Bulletin Datetime Is Expected" library="keywords_day_forecast">
<arg>${resp.json()["bulletin_datetime"]}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%Y%m%d%H%M</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20211226 13:43:29.510" level="INFO">${current_time} = 202112261343</msg>
<status status="PASS" starttime="20211226 13:43:29.510" endtime="20211226 13:43:29.510"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${current_time_int}</var>
<arg>int(${current_time})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.511" level="INFO">${current_time_int} = 202112261343</msg>
<status status="PASS" starttime="20211226 13:43:29.510" endtime="20211226 13:43:29.511"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${resp_time_int}</var>
<arg>int(${resp_time})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.511" level="INFO">${resp_time_int} = 202112261130</msg>
<status status="PASS" starttime="20211226 13:43:29.511" endtime="20211226 13:43:29.511"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${current_time_int} &gt;= ${resp_time_int}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20211226 13:43:29.511" endtime="20211226 13:43:29.512"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.508" endtime="20211226 13:43:29.512"/>
</kw>
<kw name="Verify The Count Of Forecase Is Nine" library="keywords_day_forecast">
<arg>${resp.json()["forecast_detail"]}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${forecast_list_count}</var>
<arg>${forecast_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20211226 13:43:29.513" level="INFO">Length is 9</msg>
<msg timestamp="20211226 13:43:29.513" level="INFO">${forecast_list_count} = 9</msg>
<status status="PASS" starttime="20211226 13:43:29.513" endtime="20211226 13:43:29.513"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>9</arg>
<arg>${forecast_list_count}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.514" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.514" endtime="20211226 13:43:29.514"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.512" endtime="20211226 13:43:29.514"/>
</kw>
<kw name="Verify The Date Of Forecast Is Expected" library="keywords_day_forecast">
<arg>${resp.json()["forecast_detail"]}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%s</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20211226 13:43:29.515" level="INFO">${current_time} = 1640497409</msg>
<status status="PASS" starttime="20211226 13:43:29.515" endtime="20211226 13:43:29.515"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${index}</var>
<var>${item}</var>
<value>@{forecast_list}</value>
<iter>
<var name="${index}">0</var>
<var name="${item}">{'forecast_date': '20211227', 'forecast_day_of_week': 1, 'wind_info': 'North force 5, occasionally force 6 offshore and on high ground at first.', 'wx_desc': 'Cold. Cloudy with occasional rain. Rain w...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.516" level="INFO">${expected_date} = 2021-12-27 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.516" endtime="20211226 13:43:29.516"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.517" level="INFO">${expected_date} = 20211227</msg>
<status status="PASS" starttime="20211226 13:43:29.516" endtime="20211226 13:43:29.517"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.520" level="INFO">${week_day} = 1</msg>
<status status="PASS" starttime="20211226 13:43:29.517" endtime="20211226 13:43:29.520"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.520" endtime="20211226 13:43:29.521"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.521" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.521" endtime="20211226 13:43:29.521"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.515" endtime="20211226 13:43:29.521"/>
</iter>
<iter>
<var name="${index}">1</var>
<var name="${item}">{'forecast_date': '20211228', 'forecast_day_of_week': 2, 'wind_info': 'North to northeast force 4 to 5.', 'wx_desc': 'Cold in the morning. Dry with bright periods during the day.', 'max_temp': 16, 'mi...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.522" level="INFO">${expected_date} = 2021-12-28 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.522" endtime="20211226 13:43:29.522"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.523" level="INFO">${expected_date} = 20211228</msg>
<status status="PASS" starttime="20211226 13:43:29.522" endtime="20211226 13:43:29.523"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.523" level="INFO">${week_day} = 2</msg>
<status status="PASS" starttime="20211226 13:43:29.523" endtime="20211226 13:43:29.523"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.524" endtime="20211226 13:43:29.524"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.525" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.524" endtime="20211226 13:43:29.525"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.522" endtime="20211226 13:43:29.525"/>
</iter>
<iter>
<var name="${index}">2</var>
<var name="${item}">{'forecast_date': '20211229', 'forecast_day_of_week': 3, 'wind_info': 'Northeast force 4.', 'wx_desc': 'Cool with cloudy periods in the morning and at night. Mainly fine and dry during the day.', 'max...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.526" level="INFO">${expected_date} = 2021-12-29 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.525" endtime="20211226 13:43:29.526"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.526" level="INFO">${expected_date} = 20211229</msg>
<status status="PASS" starttime="20211226 13:43:29.526" endtime="20211226 13:43:29.526"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.527" level="INFO">${week_day} = 3</msg>
<status status="PASS" starttime="20211226 13:43:29.526" endtime="20211226 13:43:29.527"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.527" endtime="20211226 13:43:29.527"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.528" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.527" endtime="20211226 13:43:29.528"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.525" endtime="20211226 13:43:29.528"/>
</iter>
<iter>
<var name="${index}">3</var>
<var name="${item}">{'forecast_date': '20211230', 'forecast_day_of_week': 4, 'wind_info': 'North to northeast force 4.', 'wx_desc': 'Fine and dry. Cool in the morning and at night.', 'max_temp': 20, 'min_temp': 15, 'max_...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.529" level="INFO">${expected_date} = 2021-12-30 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.528" endtime="20211226 13:43:29.529"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.529" level="INFO">${expected_date} = 20211230</msg>
<status status="PASS" starttime="20211226 13:43:29.529" endtime="20211226 13:43:29.529"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.530" level="INFO">${week_day} = 4</msg>
<status status="PASS" starttime="20211226 13:43:29.529" endtime="20211226 13:43:29.530"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.530" endtime="20211226 13:43:29.531"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.531" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.531" endtime="20211226 13:43:29.531"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.528" endtime="20211226 13:43:29.531"/>
</iter>
<iter>
<var name="${index}">4</var>
<var name="${item}">{'forecast_date': '20211231', 'forecast_day_of_week': 5, 'wind_info': 'North to northeast force 4, occasionally force 5 offshore.', 'wx_desc': 'Fine and dry. Cool in the morning and at night.', 'max_t...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.532" level="INFO">${expected_date} = 2021-12-31 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.532" endtime="20211226 13:43:29.532"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.532" level="INFO">${expected_date} = 20211231</msg>
<status status="PASS" starttime="20211226 13:43:29.532" endtime="20211226 13:43:29.532"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.533" level="INFO">${week_day} = 5</msg>
<status status="PASS" starttime="20211226 13:43:29.532" endtime="20211226 13:43:29.533"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.533" endtime="20211226 13:43:29.534"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.534" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.534" endtime="20211226 13:43:29.534"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.532" endtime="20211226 13:43:29.534"/>
</iter>
<iter>
<var name="${index}">5</var>
<var name="${item}">{'forecast_date': '20220101', 'forecast_day_of_week': 6, 'wind_info': 'Northeast force 4, occasionally force 5 offshore.', 'wx_desc': 'Fine and dry. Cool in the morning and at night.', 'max_temp': 19,...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.535" level="INFO">${expected_date} = 2022-01-01 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.534" endtime="20211226 13:43:29.535"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.535" level="INFO">${expected_date} = 20220101</msg>
<status status="PASS" starttime="20211226 13:43:29.535" endtime="20211226 13:43:29.535"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.536" level="INFO">${week_day} = 6</msg>
<status status="PASS" starttime="20211226 13:43:29.535" endtime="20211226 13:43:29.536"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.536" endtime="20211226 13:43:29.536"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.537" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.537" endtime="20211226 13:43:29.537"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.534" endtime="20211226 13:43:29.537"/>
</iter>
<iter>
<var name="${index}">6</var>
<var name="${item}">{'forecast_date': '20220102', 'forecast_day_of_week': 0, 'wind_info': 'East to northeast force 4.', 'wx_desc': 'Dry with sunny periods. Cool in the morning and at night.', 'max_temp': 19, 'min_temp': ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.538" level="INFO">${expected_date} = 2022-01-02 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.537" endtime="20211226 13:43:29.538"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.538" level="INFO">${expected_date} = 20220102</msg>
<status status="PASS" starttime="20211226 13:43:29.538" endtime="20211226 13:43:29.538"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.539" level="INFO">${week_day} = 0</msg>
<status status="PASS" starttime="20211226 13:43:29.538" endtime="20211226 13:43:29.539"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.539" endtime="20211226 13:43:29.540"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.540" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.540" endtime="20211226 13:43:29.540"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.537" endtime="20211226 13:43:29.540"/>
</iter>
<iter>
<var name="${index}">7</var>
<var name="${item}">{'forecast_date': '20220103', 'forecast_day_of_week': 1, 'wind_info': 'East force 4 to 5.', 'wx_desc': 'Sunny intervals. Cool in the morning.', 'max_temp': 20, 'min_temp': 16, 'max_rh': 80, 'min_rh': ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.541" level="INFO">${expected_date} = 2022-01-03 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.540" endtime="20211226 13:43:29.541"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.541" level="INFO">${expected_date} = 20220103</msg>
<status status="PASS" starttime="20211226 13:43:29.541" endtime="20211226 13:43:29.541"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.542" level="INFO">${week_day} = 1</msg>
<status status="PASS" starttime="20211226 13:43:29.541" endtime="20211226 13:43:29.542"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.542" endtime="20211226 13:43:29.543"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.543" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.543" endtime="20211226 13:43:29.543"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.540" endtime="20211226 13:43:29.543"/>
</iter>
<iter>
<var name="${index}">8</var>
<var name="${item}">{'forecast_date': '20220104', 'forecast_day_of_week': 2, 'wind_info': 'East force 4.', 'wx_desc': 'Sunny intervals. One or two rain patches. Cool in the morning.', 'max_temp': 20, 'min_temp': 17, 'max...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_date}</var>
<arg>datetime.datetime.fromtimestamp(${current_time}) + dateutil.relativedelta.relativedelta(days=(${index} + 1))</arg>
<arg>dateutil, datetime</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20211226 13:43:29.544" level="INFO">${expected_date} = 2022-01-04 13:43:29</msg>
<status status="PASS" starttime="20211226 13:43:29.543" endtime="20211226 13:43:29.544"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y%m%d</arg>
<arg>date_format=%Y%m%d %H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.544" level="INFO">${expected_date} = 20220104</msg>
<status status="PASS" starttime="20211226 13:43:29.544" endtime="20211226 13:43:29.544"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${week_day}</var>
<arg>${item["forecast_date"]}</arg>
<arg>result_format=%w</arg>
<arg>date_format=%Y%m%d</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20211226 13:43:29.545" level="INFO">${week_day} = 2</msg>
<status status="PASS" starttime="20211226 13:43:29.544" endtime="20211226 13:43:29.545"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_date}</arg>
<arg>${item["forecast_date"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211226 13:43:29.545" endtime="20211226 13:43:29.545"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${week_day}</arg>
<arg>${item["forecast_day_of_week"]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211226 13:43:29.546" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20211226 13:43:29.545" endtime="20211226 13:43:29.546"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.543" endtime="20211226 13:43:29.546"/>
</iter>
<status status="PASS" starttime="20211226 13:43:29.515" endtime="20211226 13:43:29.546"/>
</for>
<status status="PASS" starttime="20211226 13:43:29.514" endtime="20211226 13:43:29.546"/>
</kw>
<kw name="Get The Relative Humidity For The Day After Tommorrow" library="keywords_day_forecast">
<arg>${resp.json()["forecast_detail"]}</arg>
<kw name="Get From List" library="Collections">
<var>${expected_date}</var>
<arg>${forecast_list}</arg>
<arg>${1}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20211226 13:43:29.547" level="INFO">${expected_date} = {'forecast_date': '20211228', 'forecast_day_of_week': 2, 'wind_info': 'North to northeast force 4 to 5.', 'wx_desc': 'Cold in the morning. Dry with bright periods during the day.', 'max_temp': 16, 'mi...</msg>
<status status="PASS" starttime="20211226 13:43:29.547" endtime="20211226 13:43:29.547"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${relative_humidity}</var>
<arg>min=${expected_date["min_rh"]}</arg>
<arg>max=${expected_date["max_rh"]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20211226 13:43:29.548" level="INFO">${relative_humidity} = {'min': 60, 'max': 85}</msg>
<status status="PASS" starttime="20211226 13:43:29.547" endtime="20211226 13:43:29.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Min: ${expected_date["min_rh"]} ~ Max: ${expected_date["max_rh"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211226 13:43:29.549" level="INFO">Min: 60 ~ Max: 85</msg>
<status status="PASS" starttime="20211226 13:43:29.548" endtime="20211226 13:43:29.549"/>
</kw>
<status status="PASS" starttime="20211226 13:43:29.546" endtime="20211226 13:43:29.549"/>
</kw>
<tag>api</tag>
<tag>day_forecast</tag>
<status status="PASS" starttime="20211226 13:43:29.233" endtime="20211226 13:43:29.549"/>
</test>
<doc>Verify 9 days forecast</doc>
<status status="PASS" starttime="20211226 13:43:29.162" endtime="20211226 13:43:29.549"/>
</suite>
<status status="PASS" starttime="20211226 13:43:29.161" endtime="20211226 13:43:29.550"/>
</suite>
<status status="PASS" starttime="20211226 13:43:29.152" endtime="20211226 13:43:29.550"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">day_forecast</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Api">Api</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test">Api.Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Test Day Forecast">Api.Test.Test Day Forecast</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
